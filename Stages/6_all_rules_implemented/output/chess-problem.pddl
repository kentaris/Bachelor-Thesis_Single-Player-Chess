(define (problem chess-problem)
    (:domain chess)
    (:objects
        ;locations:
		n1 n2 n3 n4 n5 n6 n7 n8  - location
        
        ;object pieces:
		 king_w1 - king
		 rook_w1 rook_w2 - rook
		 king_b1 - king
		 rook_b1 - rook
    )
    (:init
        (valid_position)
        ;initial state s_0:
		(at rook_b1 n8 n2)
		(at king_b1 n1 n8)
		(at rook_w1 n1 n1)
		(at rook_w2 n2 n1)
		(at king_w1 n4 n8)
		(empty_square n1 n7)
		(empty_square n1 n6)
		(empty_square n1 n5)
		(empty_square n1 n4)
		(empty_square n1 n3)
		(empty_square n1 n2)
		(empty_square n2 n8)
		(empty_square n2 n7)
		(empty_square n2 n6)
		(empty_square n2 n5)
		(empty_square n2 n4)
		(empty_square n2 n3)
		(empty_square n2 n2)
		(empty_square n3 n8)
		(empty_square n3 n7)
		(empty_square n3 n6)
		(empty_square n3 n5)
		(empty_square n3 n4)
		(empty_square n3 n3)
		(empty_square n3 n2)
		(empty_square n3 n1)
		(empty_square n4 n7)
		(empty_square n4 n6)
		(empty_square n4 n5)
		(empty_square n4 n4)
		(empty_square n4 n3)
		(empty_square n4 n2)
		(empty_square n4 n1)
		(empty_square n5 n8)
		(empty_square n5 n7)
		(empty_square n5 n6)
		(empty_square n5 n5)
		(empty_square n5 n4)
		(empty_square n5 n3)
		(empty_square n5 n2)
		(empty_square n5 n1)
		(empty_square n6 n8)
		(empty_square n6 n7)
		(empty_square n6 n6)
		(empty_square n6 n5)
		(empty_square n6 n4)
		(empty_square n6 n3)
		(empty_square n6 n2)
		(empty_square n6 n1)
		(empty_square n7 n8)
		(empty_square n7 n7)
		(empty_square n7 n6)
		(empty_square n7 n5)
		(empty_square n7 n4)
		(empty_square n7 n3)
		(empty_square n7 n2)
		(empty_square n7 n1)
		(empty_square n8 n8)
		(empty_square n8 n7)
		(empty_square n8 n6)
		(empty_square n8 n5)
		(empty_square n8 n4)
		(empty_square n8 n3)
		(empty_square n8 n1)

		;Pawn double moves start for white:
		(pawn_start_pos_white n1 n2)
		(pawn_start_pos_white n2 n2)
		(pawn_start_pos_white n3 n2)
		(pawn_start_pos_white n4 n2)
		(pawn_start_pos_white n5 n2)
		(pawn_start_pos_white n6 n2)
		(pawn_start_pos_white n7 n2)
		(pawn_start_pos_white n8 n2)

		;Pawn double moves start for black:
		(pawn_start_pos_black n1 n7)
		(pawn_start_pos_black n2 n7)
		(pawn_start_pos_black n3 n7)
		(pawn_start_pos_black n4 n7)
		(pawn_start_pos_black n5 n7)
		(pawn_start_pos_black n6 n7)
		(pawn_start_pos_black n7 n7)
		(pawn_start_pos_black n8 n7)

		;Pawn single moves for white:
		(plusOne n1 n2)
		(plusOne n2 n3)
		(plusOne n3 n4)
		(plusOne n4 n5)
		(plusOne n5 n6)
		(plusOne n6 n7)
		(plusOne n7 n8)

		;Pawn single moves for black:
		(minusOne n2 n1)
		(minusOne n3 n2)
		(minusOne n4 n3)
		(minusOne n5 n4)
		(minusOne n6 n5)
		(minusOne n7 n6)
		(minusOne n8 n7)

		;Difference by One:
		(diff_by_One n1 n2)
		(diff_by_One n2 n1)
		(diff_by_One n2 n3)
		(diff_by_One n3 n2)
		(diff_by_One n3 n4)
		(diff_by_One n4 n3)
		(diff_by_One n4 n5)
		(diff_by_One n5 n4)
		(diff_by_One n5 n6)
		(diff_by_One n6 n5)
		(diff_by_One n6 n7)
		(diff_by_One n7 n6)
		(diff_by_One n7 n8)
		(diff_by_One n8 n7)

		;Difference by Two:
		(diff_by_Two n1 n3)
		(diff_by_Two n2 n4)
		(diff_by_Two n3 n1)
		(diff_by_Two n3 n5)
		(diff_by_Two n4 n2)
		(diff_by_Two n4 n6)
		(diff_by_Two n5 n3)
		(diff_by_Two n5 n7)
		(diff_by_Two n6 n4)
		(diff_by_Two n6 n8)
		(diff_by_Two n7 n5)
		(diff_by_Two n8 n6)

		;Difference by Three:
		(diff_by_Three n1 n4)
		(diff_by_Three n2 n5)
		(diff_by_Three n3 n6)
		(diff_by_Three n4 n1)
		(diff_by_Three n4 n7)
		(diff_by_Three n5 n2)
		(diff_by_Three n5 n8)
		(diff_by_Three n6 n3)
		(diff_by_Three n7 n4)
		(diff_by_Three n8 n5)

		;Difference by Four:
		(diff_by_Four n1 n5)
		(diff_by_Four n2 n6)
		(diff_by_Four n3 n7)
		(diff_by_Four n4 n8)
		(diff_by_Four n5 n1)
		(diff_by_Four n6 n2)
		(diff_by_Four n7 n3)
		(diff_by_Four n8 n4)
;[:init_diffBy]
		(same_color king_b1 king_b1)
		(same_color king_b1 rook_b1)
		(same_color rook_b1 king_b1)
		(same_color rook_b1 rook_b1)
		(same_color king_w1 king_w1)
		(same_color king_w1 rook_w1)
		(same_color king_w1 rook_w2)
		(same_color rook_w1 king_w1)
		(same_color rook_w1 rook_w1)
		(same_color rook_w1 rook_w2)
		(same_color rook_w2 king_w1)
		(same_color rook_w2 rook_w1)
		(same_color rook_w2 rook_w2)
		(not_same_color king_w1 king_b1)
		(not_same_color king_w1 rook_b1)
		(not_same_color rook_w1 king_b1)
		(not_same_color rook_w1 rook_b1)
		(not_same_color rook_w2 king_b1)
		(not_same_color rook_w2 rook_b1)
		(not_same_color king_b1 king_w1)
		(not_same_color king_b1 rook_w1)
		(not_same_color king_b1 rook_w2)
		(not_same_color rook_b1 king_w1)
		(not_same_color rook_b1 rook_w1)
		(not_same_color rook_b1 rook_w2)
            
        ;figures on the board:
		(is_on_board rook_w2)
		(is_on_board king_w1)
		(is_on_board rook_b1)
		(is_on_board rook_w1)
		(is_on_board king_b1)
        
        ;last pawn line:
		(last_pawn_line n1 n1)
		(last_pawn_line n2 n1)
		(last_pawn_line n3 n1)
		(last_pawn_line n4 n1)
		(last_pawn_line n5 n1)
		(last_pawn_line n6 n1)
		(last_pawn_line n7 n1)
		(last_pawn_line n8 n1)
		(last_pawn_line n1 n8)
		(last_pawn_line n2 n8)
		(last_pawn_line n3 n8)
		(last_pawn_line n4 n8)
		(last_pawn_line n5 n8)
		(last_pawn_line n6 n8)
		(last_pawn_line n7 n8)
		(last_pawn_line n8 n8)
        
        ;castling:
        
        ;colors:
		(is_white king_w1)
		(is_white rook_w1)
		(is_white rook_w2)
		(is_black king_b1)
		(is_black rook_b1)
        
        ;piece types:
		(is_king king_w1)
		(is_rook rook_w1)
		(is_rook rook_w2)
		(is_king king_b1)
		(is_rook rook_b1)
        
        ;turn:

;[:pawn_promotion_extra_pieces]
        
;[:adjacent]
;[:same_diag]
;[:between]

        (TRUE)
    )
    (:goal (and
                (valid_position)
        ;goal state s_*:
            ;board:
		(black_rook_at n1 n2)
		(black_king_at n1 n8)
		(white_rook_at n1 n1)
		(white_rook_at n2 n1)
		(white_king_at n4 n8)
		(empty_square n1 n7)
		(empty_square n1 n6)
		(empty_square n1 n5)
		(empty_square n1 n4)
		(empty_square n1 n3)
		(empty_square n2 n8)
		(empty_square n2 n7)
		(empty_square n2 n6)
		(empty_square n2 n5)
		(empty_square n2 n4)
		(empty_square n2 n3)
		(empty_square n2 n2)
		(empty_square n3 n8)
		(empty_square n3 n7)
		(empty_square n3 n6)
		(empty_square n3 n5)
		(empty_square n3 n4)
		(empty_square n3 n3)
		(empty_square n3 n2)
		(empty_square n3 n1)
		(empty_square n4 n7)
		(empty_square n4 n6)
		(empty_square n4 n5)
		(empty_square n4 n4)
		(empty_square n4 n3)
		(empty_square n4 n2)
		(empty_square n4 n1)
		(empty_square n5 n8)
		(empty_square n5 n7)
		(empty_square n5 n6)
		(empty_square n5 n5)
		(empty_square n5 n4)
		(empty_square n5 n3)
		(empty_square n5 n2)
		(empty_square n5 n1)
		(empty_square n6 n8)
		(empty_square n6 n7)
		(empty_square n6 n6)
		(empty_square n6 n5)
		(empty_square n6 n4)
		(empty_square n6 n3)
		(empty_square n6 n2)
		(empty_square n6 n1)
		(empty_square n7 n8)
		(empty_square n7 n7)
		(empty_square n7 n6)
		(empty_square n7 n5)
		(empty_square n7 n4)
		(empty_square n7 n3)
		(empty_square n7 n2)
		(empty_square n7 n1)
		(empty_square n8 n8)
		(empty_square n8 n7)
		(empty_square n8 n6)
		(empty_square n8 n5)
		(empty_square n8 n4)
		(empty_square n8 n3)
		(empty_square n8 n2)
		(empty_square n8 n1)
            ;removed pieces:
;[:removed]
           )
    )
)